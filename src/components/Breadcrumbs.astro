---
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from '@/components/ui/breadcrumb'
import { Icon } from 'astro-icon/components'

export interface BreadcrumbItem {
  href?: string
  label: string
  icon?: string
}

interface Props {
  items: BreadcrumbItem[]
  collapseOnMobile?: boolean
}

const { items, collapseOnMobile = false } = Astro.props

// Helper function to truncate text for mobile
const truncateText = (text: string, maxLength: number = 30) => {
  if (text.length <= maxLength) return text
  return text.substring(0, maxLength) + '...'
}
---

<Breadcrumb>
  <BreadcrumbList class="gap-1 sm:gap-2.5">
    <BreadcrumbItem>
      <BreadcrumbLink href="/" class="p-1 sm:p-2">
        <Icon name="lucide:home" class="size-4 shrink-0" />
        <span class="sr-only">Beranda</span>
      </BreadcrumbLink>
    </BreadcrumbItem>

    {collapseOnMobile && items.length > 2 ? (
      <!-- Mobile collapsed view -->
      <>
        <BreadcrumbSeparator class="block sm:hidden" />
        <BreadcrumbItem class="block sm:hidden">
          <span class="text-muted-foreground px-1">
            <Icon name="lucide:more-horizontal" class="size-4" />
          </span>
        </BreadcrumbItem>
        <BreadcrumbSeparator class="block sm:hidden" />
        <BreadcrumbItem class="block sm:hidden">
          <BreadcrumbPage>
            <span class="flex items-center gap-x-1.5 min-w-0">
              {items[items.length - 1].icon && (
                <Icon name={items[items.length - 1].icon} class="size-4 shrink-0" />
              )}
              <span class="truncate max-w-[150px]" title={items[items.length - 1].label}>
                {truncateText(items[items.length - 1].label, 25)}
              </span>
            </span>
          </BreadcrumbPage>
        </BreadcrumbItem>

        <!-- Desktop full view -->
        {items.map((item, index) => (
          <span class="hidden sm:contents">
            <BreadcrumbSeparator />
            <BreadcrumbItem>
              {index === items.length - 1 ? (
                <BreadcrumbPage>
                  <span class="flex items-center gap-x-2 min-w-0">
                    {item.icon && (
                      <Icon name={item.icon} class="size-4 shrink-0" />
                    )}
                    <span class="truncate max-w-none">{item.label}</span>
                  </span>
                </BreadcrumbPage>
              ) : (
                <BreadcrumbLink href={item.href} class="p-1 sm:p-2">
                  <span class="flex items-center gap-x-2 min-w-0">
                    {item.icon && (
                      <Icon name={item.icon} class="size-4 shrink-0" />
                    )}
                    <span class="truncate max-w-none">{item.label}</span>
                  </span>
                </BreadcrumbLink>
              )}
            </BreadcrumbItem>
          </span>
        ))}
      </>
    ) : (
      <!-- Regular view (no collapse or <= 2 items) -->
      {items.map((item, index) => (
        <>
          <BreadcrumbSeparator />
          <BreadcrumbItem>
            {index === items.length - 1 ? (
              <BreadcrumbPage>
                <span class="flex items-center gap-x-1.5 sm:gap-x-2 min-w-0">
                  {item.icon && (
                    <Icon name={item.icon} class="size-4 shrink-0" />
                  )}
                  <span
                    class="truncate max-w-[150px] sm:max-w-[300px] lg:max-w-none"
                    title={item.label}
                  >
                    <span class="block sm:hidden">{truncateText(item.label, 25)}</span>
                    <span class="hidden sm:block">{item.label}</span>
                  </span>
                </span>
              </BreadcrumbPage>
            ) : (
              <BreadcrumbLink href={item.href} class="p-1 sm:p-2">
                <span class="flex items-center gap-x-1.5 sm:gap-x-2 min-w-0">
                  {item.icon && (
                    <Icon name={item.icon} class="size-4 shrink-0" />
                  )}
                  <span
                    class="truncate max-w-[120px] sm:max-w-[200px] lg:max-w-none"
                    title={item.label}
                  >
                    <span class="block sm:hidden">{truncateText(item.label, 20)}</span>
                    <span class="hidden sm:block">{item.label}</span>
                  </span>
                </span>
              </BreadcrumbLink>
            )}
          </BreadcrumbItem>
        </>
      ))}
    )}
  </BreadcrumbList>
</Breadcrumb>
